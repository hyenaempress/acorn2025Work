# 📚 데이터 사이언스 학습 로드맵

> **체계적인 학습 경로로 데이터 사이언스 마스터하기**  
> 기초부터 실무 활용까지, 단계별 완벽 가이드

---

## 🗺️ **전체 학습 여정 개요**

```mermaid
graph LR
    A[🔢 NumPy 기초] --> B[🐼 pandas 기초]
    B --> C[📊 pandas 고급]
    C --> D[🌐 웹 크롤링]
    D --> E[🚀 실무 프로젝트]
    
    style A fill:#ff9999
    style B fill:#99ccff
    style C fill:#99ccff
    style D fill:#99ff99
    style E fill:#ffcc99
```

---

## 📍 **1단계: NumPy 기초 마스터** `[필수 기간: 1-2주]`

### 🎯 **학습 목표**
- 배열 기본 속성과 연산 완벽 이해
- 벡터화 연산으로 성능 최적화
- 실무 활용을 위한 핵심 개념 습득

### 📖 **핵심 학습 내용**
```python
# ✅ 반드시 익혀야 할 NumPy 핵심
• 배열 속성: shape, dtype, ndim, size
• 배열 생성: array(), zeros(), ones(), arange()
• 인덱싱 & 슬라이싱: [start:end:step]
• 브로드캐스팅: 다른 크기 배열 간 연산
• 유니버셜 함수: np.sin(), np.exp(), np.log()
• 집계 함수: sum(), mean(), std(), max(), min()
```

### 🔥 **실습 미션**
1. **추천 시스템 구현**: 사용자-아이템 유사도 계산
2. **이미지 분류**: 간단한 신경망 순전파
3. **PCA 차원축소**: 고차원 데이터 압축
4. **자연어 처리**: 문서 유사도 벡터 연산

### 📋 **체크포인트**
- [ ] 3차원 이상 배열 자유자재로 다루기
- [ ] 브로드캐스팅 원리 완벽 이해
- [ ] 내적 연산의 실무 활용 이해
- [ ] 10,000개 이상 데이터 빠른 연산 가능

---

## 📍 **2단계: pandas 기초 정착** `[필수 기간: 2-3주]`

### 🎯 **학습 목표**
- DataFrame과 Series 완벽 활용
- 데이터 탐색과 정제 기술 습득
- 그룹 연산과 피벗 테이블 마스터

### 📖 **핵심 학습 내용**
```python
# ✅ pandas 기초 완성 체크리스트
• 데이터 구조: DataFrame vs Series
• 데이터 로딩: read_csv(), read_excel(), read_json()
• 데이터 탐색: info(), describe(), value_counts()
• 인덱싱: loc[], iloc[], boolean indexing
• 데이터 정제: dropna(), fillna(), drop_duplicates()
• 그룹 연산: groupby().agg(), transform()
```

### 🔥 **실습 미션**
1. **판매 데이터 분석**: 월별/지역별 매출 집계
2. **고객 세그먼테이션**: RFM 분석 구현
3. **시계열 분석**: 주가 데이터 트렌드 분석
4. **결측치 처리**: 다양한 imputation 기법

### 📋 **체크포인트**
- [ ] 100MB 이상 CSV 파일 자유자재로 처리
- [ ] 복잡한 그룹 연산 한 번에 수행
- [ ] 데이터 품질 문제 빠르게 발견하고 해결
- [ ] 피벗 테이블로 인사이트 도출

---

## 📍 **3단계: pandas 고급 & 파일 처리** `[필수 기간: 1-2주]`

### 🎯 **학습 목표**
- 대용량 데이터 효율적 처리
- 다양한 파일 형식 완벽 지원
- 메모리 최적화 기술 습득

### 📖 **핵심 학습 내용**
```python
# ✅ 고급 pandas & 파일 처리
• 청크 처리: chunksize 매개변수 활용
• 파일 형식: CSV, Excel, JSON, Parquet, HDF5
• 인코딩: utf-8, cp949, utf-8-sig
• 메모리 최적화: dtype 변경, 카테고리형
• 병합 연산: merge(), join(), concat()
• 시계열: datetime 인덱싱, resampling
```

### 🔥 **실습 미션**
1. **대용량 로그 분석**: 1GB+ 파일 청크 처리
2. **다중 Excel 통합**: 여러 시트 데이터 병합
3. **API 데이터**: JSON 형식 실시간 처리
4. **배치 처리 시스템**: 자동화된 데이터 파이프라인

### 📋 **체크포인트**
- [ ] 1GB+ 데이터를 8GB RAM에서 처리 가능
- [ ] 5개 이상 파일 형식 자유자재로 변환
- [ ] 메모리 사용량 50% 이상 최적화 가능
- [ ] 복잡한 데이터 병합 작업 수행

---

## 📍 **4단계: 웹 크롤링 실전** `[필수 기간: 2-3주]`

### 🎯 **학습 목표**
- 실시간 데이터 수집 시스템 구축
- 웹 데이터와 pandas 완벽 연동
- 대규모 크롤링 프로젝트 수행

### 📖 **핵심 학습 내용**
```python
# ✅ 웹 크롤링 완성 가이드
• 웹 스크래핑: BeautifulSoup + requests
• CSS 선택자: 정확한 요소 선택
• 다중 페이지: 반복 처리 로직
• 데이터 정제: 정규표현식 활용
• 저장 전략: CSV, DB 연동
• 에러 처리: 안정적인 크롤러 구축
```

### 🔥 **실습 미션**
1. **뉴스 수집기**: 다중 언론사 기사 자동 수집
2. **부동산 데이터**: 아파트 시세 실시간 모니터링
3. **쇼핑몰 크롤러**: 가격 비교 서비스 구축
4. **소셜 미디어**: 트렌드 분석용 데이터 수집

### 📋 **체크포인트**
- [ ] 1일 10,000페이지 이상 안정적 수집
- [ ] 다양한 웹사이트 구조 분석 및 대응
- [ ] 수집 데이터의 pandas 자동 연동
- [ ] 에러 상황 처리 및 복구 시스템

---

## 📍 **5단계: 실무 프로젝트 완성** `[목표 기간: 3-4주]`

### 🎯 **최종 목표**
- 실무급 데이터 분석 프로젝트 완성
- 전체 데이터 파이프라인 구축
- 인사이트 도출 및 시각화

### 🚀 **프로젝트 아이디어**

#### **A. E-커머스 분석 대시보드**
```
📊 NumPy: 고객 유사도 계산
📊 pandas: 판매 데이터 분석
📊 크롤링: 경쟁사 가격 수집
📊 결과: 실시간 매출 대시보드
```

#### **B. 부동산 시세 예측 시스템**
```
🏠 NumPy: 가격 예측 모델링
🏠 pandas: 거래 데이터 분석
🏠 크롤링: 실시간 시세 수집
🏠 결과: 지역별 시세 예측
```

#### **C. 소셜 미디어 트렌드 분석**
```
📱 NumPy: 텍스트 벡터화
📱 pandas: 사용자 행동 분석
📱 크롤링: SNS 데이터 수집
📱 결과: 트렌드 예측 서비스
```

---

## ⚡ **빠른 참조 가이드**

### 🔗 **각 단계별 핵심 파일 링크**
| 단계 | 핵심 파일 | 주요 내용 |
|------|-----------|-----------|
| 1단계 | `02. 파이썬과 NumPy.md` | NumPy 기초 + 실무 예제 |
| 2-3단계 | `14. 판다스 파일 저장읽기.md` | pandas 파일 처리 완전정리 |
| 4단계 | `16. 웹 크롤링과 pandas.md` | BeautifulSoup + pandas 연동 |
| 고급 | `15. 청크 처리 알고리즘.md` | 대용량 데이터 처리 전략 |

### 🎓 **단계별 예상 학습 시간**
- **초급자** (프로그래밍 경험 1년 미만): 총 12-16주
- **중급자** (프로그래밍 경험 1-3년): 총 8-12주  
- **고급자** (프로그래밍 경험 3년 이상): 총 6-8주

### 💪 **성공 TIP**
1. **매일 실습**: 이론만으로는 절대 안 됨, 매일 코딩!
2. **실제 데이터**: 교육용이 아닌 실제 데이터로 연습
3. **오픈 소스**: GitHub에서 실제 프로젝트 참고
4. **커뮤니티**: 막힐 때는 Stack Overflow, 카카오톡 오픈 채팅 활용

---

## 🎯 **최종 목표: 데이터 사이언티스트가 되자!**

이 로드맵을 완주하면:
- ✅ **대용량 데이터** 처리 전문가
- ✅ **실시간 데이터 수집** 시스템 구축자  
- ✅ **데이터 기반 의사결정** 지원자
- ✅ **비즈니스 인사이트** 도출 전문가

**지금 바로 시작하세요! 데이터의 세계가 여러분을 기다리고 있습니다! 🚀**

---

*마지막 업데이트: 2025년 8월*  
*다음 업데이트 예정: 딥러닝 & AI 고급 과정 추가*

# 📍 **6단계: 머신러닝 & AI 기초** `[목표 기간: 4-6주]`

- 그래서 머신러닝이랑 AI는 언제배우는데요? 하고 묻는 사람들을 위한....

### 🎯 **학습 목표**
- 데이터 분석에서 머신러닝으로 자연스러운 확장
- 실무에서 활용 가능한 핵심 알고리즘 습득  
- 예측 모델링과 패턴 인식 능력 개발

### 🗺️ **머신러닝 학습 여정 맵**

```
🌱 기초 토양 (현재까지 완성)
├── NumPy: 수치 계산의 기반 ✅
├── pandas: 데이터 조작의 달인 ✅  
└── 크롤링: 데이터 수집 전문가 ✅

          ⬇️ 자연스러운 발전

🌿 머신러닝 새싹 (6단계 목표)
├── 📊 지도학습: 예측의 마법사
│   ├── 선형 회귀 → 가격 예측
│   ├── 로지스틱 회귀 → 분류 판단
│   └── 결정트리 → 규칙 발견
│
├── 🔍 비지도학습: 패턴의 탐정
│   ├── K-평균 → 고객 세그먼트
│   ├── PCA → 차원 축소  
│   └── 연관규칙 → 추천 시스템
│
└── 🚀 실전 프로젝트
    ├── 부동산 가격 예측기
    ├── 고객 이탈 분석 시스템
    └── 상품 추천 엔진

          ⬇️ 미래 확장

🌳 고급 AI 숲 (향후 계획)
├── 🧠 딥러닝: 신경망의 세계
│   ├── CNN → 이미지 인식
│   ├── RNN/LSTM → 시계열 예측
│   └── Transformer → 자연어 처리
│
└── 🤖 최신 AI: 거대 모델의 시대
    ├── GPT → 텍스트 생성
    ├── BERT → 언어 이해
    └── 멀티모달 AI → 통합 지능
```

### 📖 **6단계 세부 학습 내용**

#### **6-1단계: 머신러닝 기초 개념** `[1주차]`
```python
# ✅ 반드시 알아야 할 ML 핵심 개념들
• 지도 vs 비지도 vs 강화학습의 차이
• 훈련/검증/테스트 데이터 분할
• 과적합/과소적합 이해와 해결
• 교차 검증과 성능 평가 지표
• 특성 공학(Feature Engineering) 기초
• scikit-learn 라이브러리 활용
```

**🔥 핵심 실습**:
- 타이타닉 데이터로 생존 예측
- 붓꽃 데이터 분류 모델
- 보스턴 주택가격 회귀 분석

#### **6-2단계: 지도학습 마스터** `[2주차]`
```python
# ✅ 핵심 지도학습 알고리즘
• 선형 회귀: 연속값 예측의 기본
• 로지스틱 회귀: 분류의 출발점  
• 결정트리: 직관적 규칙 학습
• 랜덤 포레스트: 앙상블의 힘
• SVM: 복잡한 경계 학습
• k-NN: 유사성 기반 예측
```

**🚀 실전 프로젝트**:
- **부동산 AI**: 크롤링한 부동산 데이터로 가격 예측
- **마케팅 AI**: 고객 구매 패턴 분석 및 이탈 예측
- **금융 AI**: 주가 데이터 기반 투자 신호 생성

#### **6-3단계: 비지도학습 & 추천 시스템** `[2주차]`  

**📊 비지도학습 (1주차)**:
```python
# ✅ 패턴 발견의 비지도학습
• K-평균 클러스터링: 그룹 자동 분류
• 계층적 클러스터링: 트리형 분류
• DBSCAN: 밀도 기반 클러스터링
• PCA: 고차원 데이터 압축
• t-SNE: 고차원 데이터 시각화
• 연관 규칙 학습: 장바구니 분석 (Apriori, FP-Growth)
```

**🎯 추천 시스템 전문 과정 (1주차)**:
```python
# ✅ 추천 시스템의 3대 핵심 기법
• 협업 필터링 (Collaborative Filtering):
  - 사용자 기반 (User-based): 비슷한 취향 사용자 찾기
  - 아이템 기반 (Item-based): 유사한 상품 추천
  - 행렬 분해 (Matrix Factorization): SVD, NMF

• 컨텐츠 기반 필터링 (Content-based):
  - 아이템 특성 분석 (TF-IDF, 코사인 유사도)
  - 사용자 프로필 구축

• 하이브리드 방식:
  - 협업 + 컨텐츠 결합
  - 딥러닝 추천 (AutoRec, NCF)
```

**🔬 탐험 미션**:
- **고객 세그먼테이션**: RFM 분석 + K-평균 클러스터링
- **영화 추천 시스템**: Netflix 스타일 협업 필터링 구현
- **상품 추천 엔진**: Amazon 스타일 아이템 기반 필터링  
- **음악 추천**: Spotify 스타일 하이브리드 방식
- **이상 탐지**: 네트워크 보안 이상 행위 탐지

### 📈 **성장 단계별 체크포인트**

#### **🌱 초급자 달성 목표**
- [ ] scikit-learn으로 기본 모델 5개 구현
- [ ] 교차 검증으로 모델 성능 평가
- [ ] 과적합 문제 인식하고 해결
- [ ] 기존 pandas 프로젝트에 예측 기능 추가

#### **🌿 중급자 달성 목표** 
- [ ] 하이퍼파라미터 튜닝으로 성능 최적화
- [ ] 특성 공학으로 예측 정확도 개선  
- [ ] 앙상블 기법으로 모델 결합
- [ ] 실시간 예측 API 서버 구축

#### **🌳 고급자 달성 목표**
- [ ] 커스텀 평가지표 설계 및 적용
- [ ] 파이프라인 자동화로 MLOps 구현
- [ ] A/B 테스트로 모델 성능 검증
- [ ] 비즈니스 임팩트 측정 가능

### 🔗 **기존 학습과의 연결점**

#### **NumPy → 머신러닝 연결**
```python
# NumPy 내적 연산이 머신러닝의 핵심!
• 선형 회귀: y = X @ w (행렬 곱셈)
• 신경망: h = X @ W + b (선형 변환)  
• PCA: 주성분 = X @ eigenvectors
• 유사도: cosine_sim = (a @ b) / (||a|| ||b||)
```

#### **pandas → 머신러닝 연결**
```python
# pandas 데이터 전처리가 ML 성공의 80%!
• 특성 공학: df.apply(), df.map() 활용
• 원핫 인코딩: pd.get_dummies()
• 시계열 특성: df.resample(), df.rolling()
• 훈련/테스트 분할: train_test_split() 전 데이터 정제
```

#### **크롤링 → 머신러닝 연결**
```python
# 크롤링으로 수집한 데이터가 ML의 원재료!
• 부동산: 크롤링 → 전처리 → 가격 예측 모델
• 뉴스: 크롤링 → 감정 분석 → 주가 예측
• 쇼핑: 크롤링 → 상품 분석 → 추천 시스템
• SNS: 크롤링 → 텍스트 마이닝 → 트렌드 예측
```

### 🛠️ **실무 활용 시나리오**

#### **📊 비즈니스 분석가로 성장**
```
현재 기술 스택 + ML =
• pandas 매출 분석 → 매출 예측 모델
• 크롤링 경쟁사 데이터 → 시장 분석 AI
• 고객 데이터 분석 → 이탈 예측 시스템
```

#### **🤖 AI 개발자로 전환**
```  
탄탄한 기초 + ML 전문성 =
• 데이터 파이프라인 구축 능력 ✅
• 실전 프로젝트 경험 ✅  
• 비즈니스 이해도 ✅
→ 즉시 활용 가능한 AI 전문가!
```

### 💡 **학습 전략 & 꿀팁**

#### **🎯 효과적인 학습 순서**
1. **이론 20% + 실습 80%**: 개념보다는 직접 구현
2. **작은 성공 경험**: 간단한 데이터셋부터 시작
3. **점진적 복잡화**: 기본 → 실제 데이터 → 복잡한 문제
4. **기존 프로젝트 확장**: pandas 프로젝트에 ML 기능 추가

#### **🚫 피해야 할 함정들**
- ❌ 이론만 공부하고 실습 안하기
- ❌ 복잡한 알고리즘부터 시작하기  
- ❌ 데이터 전처리 대충하기
- ❌ 과적합 문제 무시하기

#### **✅ 성공 비결**
- ✅ **매일 코딩**: 하루 1시간이라도 꾸준히
- ✅ **실제 데이터**: 교육용 데이터에만 의존하지 말기
- ✅ **결과 해석**: 단순 정확도뿐 아니라 비즈니스 의미 파악
- ✅ **커뮤니티**: Kaggle, GitHub에서 다른 사람 코드 참고

### 🔮 **6단계 이후 발전 방향**

#### **🧠 딥러닝으로 진화** (7단계 예정)
```
현재 ML 기초 → 딥러닝 고급
├── TensorFlow/PyTorch 마스터
├── CNN으로 이미지 분석
├── RNN/LSTM으로 시계열 예측  
└── Transformer로 자연어 처리
```

#### **🏭 MLOps 전문가** (실무 특화)
```
ML 모델 개발 → 프로덕션 배포
├── Docker 컨테이너화
├── 모델 버전 관리 (MLflow)
├── 자동화 파이프라인 (Airflow)
└── 모니터링 & A/B 테스트
```

### 📋 **6단계 최종 체크리스트**

**🎓 졸업 조건 (모두 달성시 다음 단계 진행)**:
- [ ] 5개 이상의 실제 데이터셋으로 ML 프로젝트 완성
- [ ] 과적합 없는 안정적인 모델 구축 능력
- [ ] 비즈니스 문제를 ML 문제로 변환하는 사고력
- [ ] 모델 성능을 명확하게 평가하고 개선하는 능력
- [ ] 기존 pandas/크롤링 프로젝트에 ML 기능 통합 완료

---

**🚀 다음 모험 예고: 딥러닝 & 최신 AI 정복**

*6단계를 완주하면, 당신은 이미 실무에서 바로 활용 가능한*  
*데이터 사이언티스트가 되어 있을 것입니다!*

*그 다음은 딥러닝의 신비한 세계가 기다리고 있습니다...*  
*신경망의 마법으로 이미지를 인식하고,*  
*자연어를 이해하며, 창의적인 콘텐츠까지 생성하는*  
*진정한 AI 마스터로의 여정이 시작됩니다!* ✨
